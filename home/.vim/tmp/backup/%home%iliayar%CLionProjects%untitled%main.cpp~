#include <iostream>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <map>
#include <cstdio>
#include <set>
#include <queue>
#include <functional>
#include <bitset>
#include <climits>
#include <cctype>
#include <cassert>
#include <deque>
#include <time.h>

using namespace std;


typedef long long int64;


#define st first
#define nd second

#define double long double
#define mp make_pair
#define int int64
#define pb push_back
#define vint vector<int>
#define pii pair<int,int>


#define ALL(a) a.begin(),a.end()


ostream& operator<<(ostream& os, const vector<int>& a) {
    for(int i = 0; i < a.size(); ++i) {
        os << a[i] << ' ';
    }
    return os;
}

int min(int a, int b, int c) {
    return min(a,min(b,c));
}
int max(int a, int b, int c) {
    return max(a,max(b,c));
}
/*-------------------------------------------------------------------------*/


/*-------------------------------------------------------------------------*/
signed main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
#ifdef LOCAL_BUILD
    freopen("input.txt","r",stdin);
    freopen("output.txt", "w", stdout);
    clock_t tStart = clock();
#else
    //freopen(FILE_NAME".in","r",stdin);
    //freopen(FILE_NAME".out", "w", stdout);
#endif
/*-------------------------------------------------------------------------*/
    int n; cin >> n;
    int nt = n;
    for(int q = 1; q < sqrt(n); ++q) {
        if(n%q != 0)
            continue;
        int i = n/q;
        cout <<  (2+(n/i-1)*i)*(n/i)/2 << ' ';
    }
    for(int i = sqrt(n); i >= 1; --i) {
        if(n%i != 0)
            continue;
       cout <<  (2+(n/i-1)*i)*(n/i)/2 << ' ';
    }

/*-------------------------------------------------------------------------*/
#ifdef LOCAL_BUILD
    printf("\nTime taken: %.6Lfs\n", (double)(clock() - tStart)/CLOCKS_PER_SEC);
#endif

    return 0;
}